#include "sms.hpp"
#include "time.h"
#include "string.h"
#include "sys/timeb.h"
#include <iostream>
/*for a given integration code icode function sets
number ob integration points ngpo and pointer to the  vector of
integration points and weights
{x1,y1,z1,w1,x2,y2,z2,w2....,xn,yn,zn,wn}
file:///C:/Book/Doc/Integration.html
function returns 0 if icode is correct and 1 if icode is not correct

for new code  correct
nd ng IntCodes SMTIntPoints and ndi in utility.c!!!!!

recreate Extrapolation.c file (code is in AceCommon.m)

if integration is changes all elements have to be recompiled!!! SMSUtility is hard coded into element dll
via libaceutility.lib - lib have to be recompiled !!!
*/

      double ic1_2[]={0,0,0,4.00000000000000000,267e-3};

      double ic2_2[]={-0.577350269189625765,-0.577350269189625765,0,1.00000000000000000
         ,0.577350269189625765,-0.577350269189625765,0,1.00000000000000000
         ,-0.577350269189625765,0.577350269189625765,0,1.00000000000000000
         ,0.577350269189625765,0.577350269189625765,0,1.00000000000000000
         };
      double ic3_2[]={-0.774596669241483377,-0.774596669241483377,0,0.308641975308641975
         ,0,-0.774596669241483377,0,0.493827160493827160
         ,0.774596669241483377,-0.774596669241483377,0,0.308641975308641975
         ,-0.774596669241483377,0,0,0.493827160493827160
         ,0,0,0,0.790123456790123457
         ,0.774596669241483377,0,0,0.493827160493827160
         ,-0.774596669241483377,0.774596669241483377,0,0.308641975308641975
         ,0,0.774596669241483377,0,0.493827160493827160
         ,0.774596669241483377,0.774596669241483377,0,0.308641975308641975
         };
      double ic4_2[]={-0.774596669241483377,-0.774596669241483377,0,0.555555555555555556
         ,0.774596669241483377,-0.774596669241483377,0,0.555555555555555556
         ,-0.774596669241483377,0.774596669241483377,0,0.555555555555555556
         ,0.774596669241483377,0.774596669241483377,0,0.555555555555555556
         ,0,0,0,1.77777777777777778
         };
      double ic5_2[]={-1.00000000000000000,-1.00000000000000000,0,1.00000000000000000
         ,1.00000000000000000,-1.00000000000000000,0,1.00000000000000000
         ,-1.00000000000000000,1.00000000000000000,0,1.00000000000000000
         ,1.00000000000000000,1.00000000000000000,0,1.00000000000000000
         };
      double ic6_2[]={0,0,0,8.00000000000000000
         };
      double ic7_2[]={-0.577350269189625765,-0.577350269189625765,-0.577350269189625765,1.00000000000000000
         ,0.577350269189625765,-0.577350269189625765,-0.577350269189625765,1.00000000000000000
         ,-0.577350269189625765,0.577350269189625765,-0.577350269189625765,1.00000000000000000
         ,0.577350269189625765,0.577350269189625765,-0.577350269189625765,1.00000000000000000
         ,-0.577350269189625765,-0.577350269189625765,0.577350269189625765,1.00000000000000000
         ,0.577350269189625765,-0.577350269189625765,0.577350269189625765,1.00000000000000000
         ,-0.577350269189625765,0.577350269189625765,0.577350269189625765,1.00000000000000000
         ,0.577350269189625765,0.577350269189625765,0.577350269189625765,1.00000000000000000
         };
      double ic8_2[]={-0.774596669241483377,-0.774596669241483377,-0.774596669241483377,0.171467764060356653
         ,0,-0.774596669241483377,-0.774596669241483377,0.274348422496570645
         ,0.774596669241483377,-0.774596669241483377,-0.774596669241483377,0.171467764060356653
         ,-0.774596669241483377,0,-0.774596669241483377,0.274348422496570645
         ,0,0,-0.774596669241483377,0.438957475994513032
         ,0.774596669241483377,0,-0.774596669241483377,0.274348422496570645
         ,-0.774596669241483377,0.774596669241483377,-0.774596669241483377,0.171467764060356653
         ,0,0.774596669241483377,-0.774596669241483377,0.274348422496570645
         ,0.774596669241483377,0.774596669241483377,-0.774596669241483377,0.171467764060356653
         ,-0.774596669241483377,-0.774596669241483377,0,0.274348422496570645
         ,0,-0.774596669241483377,0,0.438957475994513032
         ,0.774596669241483377,-0.774596669241483377,0,0.274348422496570645
         ,-0.774596669241483377,0,0,0.438957475994513032
         ,0,0,0,0.702331961591220850
         ,0.774596669241483377,0,0,0.438957475994513032
         ,-0.774596669241483377,0.774596669241483377,0,0.274348422496570645
         ,0,0.774596669241483377,0,0.438957475994513032
         ,0.774596669241483377,0.774596669241483377,0,0.274348422496570645
         ,-0.774596669241483377,-0.774596669241483377,0.774596669241483377,0.171467764060356653
         ,0,-0.774596669241483377,0.774596669241483377,0.274348422496570645
         ,0.774596669241483377,-0.774596669241483377,0.774596669241483377,0.171467764060356653
         ,-0.774596669241483377,0,0.774596669241483377,0.274348422496570645
         ,0,0,0.774596669241483377,0.438957475994513032
         ,0.774596669241483377,0,0.774596669241483377,0.274348422496570645
         ,-0.774596669241483377,0.774596669241483377,0.774596669241483377,0.171467764060356653
         ,0,0.774596669241483377,0.774596669241483377,0.274348422496570645
         ,0.774596669241483377,0.774596669241483377,0.774596669241483377,0.171467764060356653
         };
      double ic9_2[]={-0.861136311594052575,-0.861136311594052575,-0.861136311594052575,0.0420914774905314545
         ,-0.339981043584856265,-0.861136311594052575,-0.861136311594052575,0.0789115157950705510
         ,0.339981043584856265,-0.861136311594052575,-0.861136311594052575,0.0789115157950705510
         ,0.861136311594052575,-0.861136311594052575,-0.861136311594052575,0.0420914774905314545
         ,-0.861136311594052575,-0.339981043584856265,-0.861136311594052575,0.0789115157950705510
         ,-0.339981043584856265,-0.339981043584856265,-0.861136311594052575,0.147940336056781301
         ,0.339981043584856265,-0.339981043584856265,-0.861136311594052575,0.147940336056781301
         ,0.861136311594052575,-0.339981043584856265,-0.861136311594052575,0.0789115157950705510
         ,-0.861136311594052575,0.339981043584856265,-0.861136311594052575,0.0789115157950705510
         ,-0.339981043584856265,0.339981043584856265,-0.861136311594052575,0.147940336056781301
         ,0.339981043584856265,0.339981043584856265,-0.861136311594052575,0.147940336056781301
         ,0.861136311594052575,0.339981043584856265,-0.861136311594052575,0.0789115157950705510
         ,-0.861136311594052575,0.861136311594052575,-0.861136311594052575,0.0420914774905314545
         ,-0.339981043584856265,0.861136311594052575,-0.861136311594052575,0.0789115157950705510
         ,0.339981043584856265,0.861136311594052575,-0.861136311594052575,0.0789115157950705510
         ,0.861136311594052575,0.861136311594052575,-0.861136311594052575,0.0420914774905314545
         ,-0.861136311594052575,-0.861136311594052575,-0.339981043584856265,0.0789115157950705510
         ,-0.339981043584856265,-0.861136311594052575,-0.339981043584856265,0.147940336056781301
         ,0.339981043584856265,-0.861136311594052575,-0.339981043584856265,0.147940336056781301
         ,0.861136311594052575,-0.861136311594052575,-0.339981043584856265,0.0789115157950705510
         ,-0.861136311594052575,-0.339981043584856265,-0.339981043584856265,0.147940336056781301
         ,-0.339981043584856265,-0.339981043584856265,-0.339981043584856265,0.277352966953912990
         ,0.339981043584856265,-0.339981043584856265,-0.339981043584856265,0.277352966953912990
         ,0.861136311594052575,-0.339981043584856265,-0.339981043584856265,0.147940336056781301
         ,-0.861136311594052575,0.339981043584856265,-0.339981043584856265,0.147940336056781301
         ,-0.339981043584856265,0.339981043584856265,-0.339981043584856265,0.277352966953912990
         ,0.339981043584856265,0.339981043584856265,-0.339981043584856265,0.277352966953912990
         ,0.861136311594052575,0.339981043584856265,-0.339981043584856265,0.147940336056781301
         ,-0.861136311594052575,0.861136311594052575,-0.339981043584856265,0.0789115157950705510
         ,-0.339981043584856265,0.861136311594052575,-0.339981043584856265,0.147940336056781301
         ,0.339981043584856265,0.861136311594052575,-0.339981043584856265,0.147940336056781301
         ,0.861136311594052575,0.861136311594052575,-0.339981043584856265,0.0789115157950705510
         ,-0.861136311594052575,-0.861136311594052575,0.339981043584856265,0.0789115157950705510
         ,-0.339981043584856265,-0.861136311594052575,0.339981043584856265,0.147940336056781301
         ,0.339981043584856265,-0.861136311594052575,0.339981043584856265,0.147940336056781301
         ,0.861136311594052575,-0.861136311594052575,0.339981043584856265,0.0789115157950705510
         ,-0.861136311594052575,-0.339981043584856265,0.339981043584856265,0.147940336056781301
         ,-0.339981043584856265,-0.339981043584856265,0.339981043584856265,0.277352966953912990
         ,0.339981043584856265,-0.339981043584856265,0.339981043584856265,0.277352966953912990
         ,0.861136311594052575,-0.339981043584856265,0.339981043584856265,0.147940336056781301
         ,-0.861136311594052575,0.339981043584856265,0.339981043584856265,0.147940336056781301
         ,-0.339981043584856265,0.339981043584856265,0.339981043584856265,0.277352966953912990
         ,0.339981043584856265,0.339981043584856265,0.339981043584856265,0.277352966953912990
         ,0.861136311594052575,0.339981043584856265,0.339981043584856265,0.147940336056781301
         ,-0.861136311594052575,0.861136311594052575,0.339981043584856265,0.0789115157950705510
         ,-0.339981043584856265,0.861136311594052575,0.339981043584856265,0.147940336056781301
         ,0.339981043584856265,0.861136311594052575,0.339981043584856265,0.147940336056781301
         ,0.861136311594052575,0.861136311594052575,0.339981043584856265,0.0789115157950705510
         ,-0.861136311594052575,-0.861136311594052575,0.861136311594052575,0.0420914774905314545
         ,-0.339981043584856265,-0.861136311594052575,0.861136311594052575,0.0789115157950705510
         ,0.339981043584856265,-0.861136311594052575,0.861136311594052575,0.0789115157950705510
         ,0.861136311594052575,-0.861136311594052575,0.861136311594052575,0.0420914774905314545
         ,-0.861136311594052575,-0.339981043584856265,0.861136311594052575,0.0789115157950705510
         ,-0.339981043584856265,-0.339981043584856265,0.861136311594052575,0.147940336056781301
         ,0.339981043584856265,-0.339981043584856265,0.861136311594052575,0.147940336056781301
         ,0.861136311594052575,-0.339981043584856265,0.861136311594052575,0.0789115157950705510
         ,-0.861136311594052575,0.339981043584856265,0.861136311594052575,0.0789115157950705510
         ,-0.339981043584856265,0.339981043584856265,0.861136311594052575,0.147940336056781301
         ,0.339981043584856265,0.339981043584856265,0.861136311594052575,0.147940336056781301
         ,0.861136311594052575,0.339981043584856265,0.861136311594052575,0.0789115157950705510
         ,-0.861136311594052575,0.861136311594052575,0.861136311594052575,0.0420914774905314545
         ,-0.339981043584856265,0.861136311594052575,0.861136311594052575,0.0789115157950705510
         ,0.339981043584856265,0.861136311594052575,0.861136311594052575,0.0789115157950705510
         ,0.861136311594052575,0.861136311594052575,0.861136311594052575,0.0420914774905314545
         };
      double ic10_2[]={-0.774596669241483377,-0.774596669241483377,-0.774596669241483377,0.555555555555555556
         ,0.774596669241483377,-0.774596669241483377,-0.774596669241483377,0.555555555555555556
         ,-0.774596669241483377,0.774596669241483377,-0.774596669241483377,0.555555555555555556
         ,0.774596669241483377,0.774596669241483377,-0.774596669241483377,0.555555555555555556
         ,-0.774596669241483377,-0.774596669241483377,0.774596669241483377,0.555555555555555556
         ,0.774596669241483377,-0.774596669241483377,0.774596669241483377,0.555555555555555556
         ,-0.774596669241483377,0.774596669241483377,0.774596669241483377,0.555555555555555556
         ,0.774596669241483377,0.774596669241483377,0.774596669241483377,0.555555555555555556
         ,0,0,0,3.55555555555555556
         };
      double ic11_2[]={-1.00000000000000000,-1.00000000000000000,-1.00000000000000000,1.00000000000000000
         ,1.00000000000000000,-1.00000000000000000,-1.00000000000000000,1.00000000000000000
         ,-1.00000000000000000,1.00000000000000000,-1.00000000000000000,1.00000000000000000
         ,1.00000000000000000,1.00000000000000000,-1.00000000000000000,1.00000000000000000
         ,-1.00000000000000000,-1.00000000000000000,1.00000000000000000,1.00000000000000000
         ,1.00000000000000000,-1.00000000000000000,1.00000000000000000,1.00000000000000000
         ,-1.00000000000000000,1.00000000000000000,1.00000000000000000,1.00000000000000000
         ,1.00000000000000000,1.00000000000000000,1.00000000000000000,1.00000000000000000
         };
      double ic12_2[]={0.333333333333333333,0.333333333333333333,0,0.500000000000000000
         };
      double ic13_2[]={0,0,0,0.166666666666666667
         ,1.00000000000000000,0,0,0.166666666666666667
         ,0,1.00000000000000000,0,0.166666666666666667
         };
      double ic14_2[]={0.500000000000000000,0.500000000000000000,0,0.166666666666666667
         ,0,0.500000000000000000,0,0.166666666666666667
         ,0.500000000000000000,0,0,0.166666666666666667
         };
      double ic15_2[]={0.250000000000000000,0.250000000000000000,0.250000000000000000,0.166666666666666667
         };
      double ic16_2[]={0.333333333333333333,0.333333333333333333,0,-0.281250000000000000
         ,0.600000000000000000,0.200000000000000000,0,0.260416666666666667
         ,0.200000000000000000,0.600000000000000000,0,0.260416666666666667
         ,0.200000000000000000,0.200000000000000000,0,0.260416666666666667
         };
      double ic17_2[]={0,0,0,0.0250000000000000000
         ,0.500000000000000000,0,0,0.0666666666666666667
         ,1.00000000000000000,0,0,0.0250000000000000000
         ,0.500000000000000000,0.500000000000000000,0,0.0666666666666666667
         ,0,1.00000000000000000,0,0.0250000000000000000
         ,0,0.500000000000000000,0,0.0666666666666666667
         ,0.333333333333333333,0.333333333333333333,0,0.225000000000000000
         };
      double ic18_2[]={0.585410196624968454,0.138196601125010515,0.138196601125010515,0.0416666666666666667
         ,0.138196601125010515,0.585410196624968454,0.138196601125010515,0.0416666666666666667
         ,0.138196601125010515,0.138196601125010515,0.585410196624968454,0.0416666666666666667
         ,0.138196601125010515,0.138196601125010515,0.138196601125010515,0.0416666666666666667
         };
      double ic19_2[]={0.250000000000000000,0.250000000000000000,0.250000000000000000,-0.133333333333333333
         ,0.500000000000000000,0.166666666666666667,0.166666666666666667,0.0750000000000000000
         ,0.166666666666666667,0.500000000000000000,0.166666666666666667,0.0750000000000000000
         ,0.166666666666666667,0.166666666666666667,0.500000000000000000,0.0750000000000000000
         ,0.166666666666666667,0.166666666666666667,0.166666666666666667,0.0750000000000000000
         };
      double ic20_2[]={0,0,0,2.00000000000000000
         };
      double ic21_2[]={-0.577350269189625765,0,0,1.00000000000000000
         ,0.577350269189625765,0,0,1.00000000000000000
         };
      double ic22_2[]={-0.774596669241483377,0,0,0.555555555555555556
         ,0,0,0,0.888888888888888889
         ,0.774596669241483377,0,0,0.555555555555555556
         };
      double ic23_2[]={-0.861136311594052575,0,0,0.347854845137453857
         ,-0.339981043584856265,0,0,0.652145154862546143
         ,0.339981043584856265,0,0,0.652145154862546143
         ,0.861136311594052575,0,0,0.347854845137453857
         };

      double ic24_2[]={-0.906179845938663993,0,0,0.236926885056189087
         ,-0.538469310105683091,0,0,0.478628670499366468041
         ,0,0,0,0.5688888888888888888888
         ,0.538469310105683091,0,0,0.4786286704993664680412
         ,0.906179845938663993,0,0,0.2369268850561890875142
         };

      double ic25_2[]={-0.932469514203152028,0,0,0.171324492379170345
         ,-0.661209386466264514,0,0,0.360761573048138608
         ,-0.238619186083196909,0,0,0.467913934572691047
         ,0.238619186083196909,0,0,0.467913934572691047
         ,0.661209386466264514,0,0,0.360761573048138608
         ,0.932469514203152028,0,0,0.171324492379170345
         };

      double ic26_2[]={-0.949107912342758525,0,0,0.163693583192321310
         ,-0.741531185599394440,0,0,0.353600723896998710
         ,-0.405845151377397167,0,0,0.482705683810223766
         ,0,0,0,1.82009124281208429e-8
         ,0.405845151377397167,0,0,0.482705683810223766
         ,0.741531185599394440,0,0,0.353600723896998710
         ,0.949107912342758525,0,0,0.163693583192321310
         };
      double ic27_2[]={-0.960289856497536232,0,0,0.101228536290376259
         ,-0.796666477413626740,0,0,0.222381034453374471
         ,-0.525532409916328986,0,0,0.313706645877887287
         ,-0.183434642495649805,0,0,0.362683783378361983
         ,0.183434642495649805,0,0,0.362683783378361983
         ,0.525532409916328986,0,0,0.313706645877887287
         ,0.796666477413626740,0,0,0.222381034453374471
         ,0.960289856497536232,0,0,0.101228536290376259
         };
      double ic28_2[]={-0.968160239507626090,0,0,0.0973485494521591970
         ,-0.836031107326635794,0,0,0.216376115026653425
         ,-0.613371432700590397,0,0,0.312153358247079546
         ,-0.324253423403808929,0,0,0.374121977272756099
         ,0,0,0,2.70346683303273913e-12
         ,0.324253423403808929,0,0,0.374121977272756099
         ,0.613371432700590397,0,0,0.312153358247079546
         ,0.836031107326635794,0,0,0.216376115026653425
         ,0.968160239507626090,0,0,0.0973485494521591970
         };
      double ic29_2[]={-0.973906528517171720,0,0,0.0666713443086881376
         ,-0.865063366688984511,0,0,0.149451349150580593
         ,-0.679409568299024406,0,0,0.219086362515982044
         ,-0.433395394129247191,0,0,0.269266719309996355
         ,-0.148874338981631211,0,0,0.295524224714752870
         ,0.148874338981631211,0,0,0.295524224714752870
         ,0.433395394129247191,0,0,0.269266719309996355
         ,0.679409568299024406,0,0,0.219086362515982044
         ,0.865063366688984511,0,0,0.149451349150580593
         ,0.973906528517171720,0,0,0.0666713443086881376
         };
      double ic30_2[]={-1.00000000000000000,0,0,1.00000000000000000
         ,1.00000000000000000,0,0,1.00000000000000000
         };
      double ic31_2[]={-1.00000000000000000,0,0,0.333333333333333333
         ,0,0,0,1.33333333333333333
         ,1.00000000000000000,0,0,0.333333333333333333
         };
      double ic32_2[]={-1.00000000000000000,0,0,0.166666666666666667
         ,-0.447213595499957939,0,0,0.833333333333333333
         ,0.447213595499957939,0,0,0.833333333333333333
         ,1.00000000000000000,0,0,0.166666666666666667
         };
      double ic33_2[]={-1.00000000000000000,0,0,0.100000000000000000
         ,-0.654653670707977144,0,0,0.544444444444444444
         ,0,0,0,0.711111111111111111
         ,0.654653670707977144,0,0,0.544444444444444444
         ,1.00000000000000000,0,0,0.100000000000000000
         };
      double ic34_2[]={-1.00000000000000000,0,0,0.0666666666666666667
         ,-0.765055323929464693,0,0,0.378474956297846980
         ,-0.285231516480645096,0,0,0.554858377035486353
         ,0.285231516480645096,0,0,0.554858377035486353
         ,0.765055323929464693,0,0,0.378474956297846980
         ,1.00000000000000000,0,0,0.0666666666666666667
         };
      double ic35_2[]={
        1e0/6e0,1e0/6e0,0e0,1e0/6e0,2e0/3e0,1e0/6e0,0e0,1e0/6e0,1e0/6e0,2e0/3e0,0e0,1e0/6e0
         };
      double ic36_2[]={
        0,0.816496580927726033,-0.577350269189625765,2.,0,-0.816496580927726033,-0.577350269189625765,
   2.,0.816496580927726033,0,0.577350269189625765,2.,-0.816496580927726033,0,0.577350269189625765,
   2};
      double ic37_2[]={1.,0,0,1.33333333333333333,-1.,0,0,1.33333333333333333,0,1.,0,1.33333333333333333,0,-1.,0,
   1.33333333333333333,0,0,1.,1.33333333333333333,0,0,-1.,1.33333333333333333};

      double ic38_2[]={0.795822425754221463,0,0,0.886426592797783934,-0.79582242575422146,0,0,0.886426592797783934,0,
   0.795822425754221463,0,0.886426592797783934,0,-0.79582242575422146,0,0.886426592797783934,0,0,
   0.795822425754221463,0.886426592797783934,0,0,-0.79582242575422146,0.886426592797783934,
   0.795822425754221463,0.795822425754221463,0.795822425754221463,0.886426592797783934,
   -0.79582242575422146,0.795822425754221463,0.795822425754221463,0.886426592797783934,
   0.795822425754221463,-0.79582242575422146,0.795822425754221463,0.886426592797783934,
   -0.79582242575422146,-0.79582242575422146,0.795822425754221463,0.886426592797783934,
   0.795822425754221463,0.795822425754221463,-0.79582242575422146,0.886426592797783934,
   0.795822425754221463,-0.79582242575422146,-0.79582242575422146,0.886426592797783934,
   -0.79582242575422146,-0.79582242575422146,-0.79582242575422146,0.886426592797783934,
   -0.79582242575422146,0.795822425754221463,-0.79582242575422146,0.886426592797783934};
      
double ic39_2[]={0.873821971016996, 0.063089014491502, 0., 0.0254224531851035, 0.063089014491502, 
 0.873821971016996, 0., 0.0254224531851035, 0.063089014491502, 0.063089014491502, 0., 
 0.0254224531851035, 0.501426509658179, 0.24928674517091, 0., 0.0583931378631895, 
 0.24928674517091, 0.501426509658179, 0., 0.0583931378631895, 0.24928674517091, 
 0.24928674517091, 0., 0.0583931378631895, 0.636502499121399, 0.310352451033785, 0., 
 0.041425537809187, 0.636502499121399, 0.053145049844816, 0., 0.041425537809187, 
 0.310352451033785, 0.636502499121399, 0., 0.041425537809187, 0.053145049844816, 
 0.636502499121399, 0., 0.041425537809187, 0.310352451033785, 0.053145049844816, 0., 
 0.041425537809187, 0.053145049844816, 0.310352451033785, 0., 0.041425537809187};

double ic40_2[]={0.72179424906732632079302825878891,0.092735250310891226402323913737031,
   0.092735250310891226402323913737031,0.012248840519393658257285034247721,
   0.092735250310891226402323913737031,0.72179424906732632079302825878891,
   0.092735250310891226402323913737031,0.012248840519393658257285034247721,
   0.092735250310891226402323913737031,0.092735250310891226402323913737031,
   0.72179424906732632079302825878891,0.012248840519393658257285034247721,
   0.092735250310891226402323913737031,0.092735250310891226402323913737031,
   0.092735250310891226402323913737031,0.012248840519393658257285034247721,
   0.067342242210098170607962798709627,0.31088591926330060979734573376346,0.31088591926330060979734573376346,
   0.018781320953002641799864275388881,0.31088591926330060979734573376346,
   0.067342242210098170607962798709627,0.31088591926330060979734573376346,
   0.018781320953002641799864275388881,0.31088591926330060979734573376346,0.31088591926330060979734573376346,
   0.067342242210098170607962798709627,0.018781320953002641799864275388881,
   0.31088591926330060979734573376346,0.31088591926330060979734573376346,0.31088591926330060979734573376346,
   0.018781320953002641799864275388881,0.045503704125649649491880526279339,
   0.045503704125649649491880526279339,0.45449629587435035050811947372066,
   0.0070910034628469110730115713533762,0.045503704125649649491880526279339,
   0.45449629587435035050811947372066,0.045503704125649649491880526279339,
   0.0070910034628469110730115713533762,0.045503704125649649491880526279339,
   0.45449629587435035050811947372066,0.45449629587435035050811947372066,
   0.0070910034628469110730115713533762,0.45449629587435035050811947372066,
   0.045503704125649649491880526279339,0.045503704125649649491880526279339,
   0.0070910034628469110730115713533762,0.45449629587435035050811947372066,
   0.045503704125649649491880526279339,0.45449629587435035050811947372066,
   0.0070910034628469110730115713533762,0.45449629587435035050811947372066,
   0.45449629587435035050811947372066,0.045503704125649649491880526279339,
   0.0070910034628469110730115713533762};

double ic41_2[]={0.4459484909159648863183292538831,0.4459484909159648863183292538831,0,
   0.11169079483900573284750350421656,0.1081030181680702273633414922339,
   0.4459484909159648863183292538831,0,0.11169079483900573284750350421656,
   0.4459484909159648863183292538831,0.1081030181680702273633414922339,0,
   0.11169079483900573284750350421656,0.0915762135097707434595714634022,
   0.0915762135097707434595714634022,0,0.05497587182766093381916316245011,
   0.8168475729804585130808570731956,0.0915762135097707434595714634022,0,
   0.05497587182766093381916316245011,0.0915762135097707434595714634022,
   0.8168475729804585130808570731956,0,0.05497587182766093381916316245011};

double ic42_2[]={0.33333333333333333333333333333333,0.33333333333333333333333333333333,0,
   0.1125,0.47014206410511508977044120951345,0.47014206410511508977044120951345,
   0,0.06619707639425309036882469391658,0.0597158717897698204591175809731,
   0.47014206410511508977044120951345,0,0.06619707639425309036882469391658,
   0.47014206410511508977044120951345,0.0597158717897698204591175809731,0,
   0.06619707639425309036882469391658,0.1012865073234563388009873619151,
   0.1012865073234563388009873619151,0,0.06296959027241357629784197275009,
   0.7974269853530873223980252761698,0.1012865073234563388009873619151,0,
   0.06296959027241357629784197275009,0.1012865073234563388009873619151,
   0.7974269853530873223980252761698,0,0.06296959027241357629784197275009};

double ic43_2[]={0.3280546967114266473358058199812,0.3280546967114266473358058199812,0.3280546967114266473358058199812,
   0.02308799441864369038726961639594,0.0158359098657200579925825400564,0.3280546967114266473358058199812,
   0.3280546967114266473358058199812,0.02308799441864369038726961639594,0.3280546967114266473358058199812,
   0.0158359098657200579925825400564,0.3280546967114266473358058199812,0.02308799441864369038726961639594,
   0.3280546967114266473358058199812,0.3280546967114266473358058199812,0.0158359098657200579925825400564,
   0.02308799441864369038726961639594,0.10695227393293068277170204157062,0.10695227393293068277170204157062,
   0.10695227393293068277170204157062,0.01857867224802297627939705027073,0.6791431782012079516848938752882,
   0.10695227393293068277170204157062,0.10695227393293068277170204157062,0.01857867224802297627939705027073,
   0.10695227393293068277170204157062,0.6791431782012079516848938752882,0.10695227393293068277170204157062,
   0.01857867224802297627939705027073,0.10695227393293068277170204157062,0.10695227393293068277170204157062,
   0.6791431782012079516848938752882,0.01857867224802297627939705027073};

 int ng_2[]={0,1,4,9,5,4,1,8,27,64,9,8,1,3,3,1,4,7,4,5,1,2,3,4,5,6,7,8,9,10,2,3,4,5,6,3,4,6,14,12,14,
 /*41*/6,7,8};
 int nd_2[]={0,2,2,2,2,2,3,3,3 ,3 ,3,3,2,2,2,3,2,2,3,3,1,1,1,1,1,1,1,1,1,1, 1,1,1,1,1,2,3,3,3,2,3,
 /*41*/2,2,3};

double *SMTIntPoints(int *icode,int *ngpo)
{    
    double *gp;
    switch (*icode) {
    case 0: *ngpo=0;return(NULL);
    case 1:  gp=&ic1_2[0];goto X;
    case 2:  gp=&ic2_2[0];goto X;
    case 3:  gp=&ic3_2[0];goto X;
    case 4:  gp=&ic4_2[0];goto X;
    case 5:  gp=&ic5_2[0];goto X;
    case 6:  gp=&ic6_2[0];goto X;
    case 7:  gp=&ic7_2[0];goto X;
    case 8:  gp=&ic8_2[0];goto X;
    case 9:  gp=&ic9_2[0];goto X;
    case 10:  gp=&ic10_2[0];goto X;
    case 11:  gp=&ic11_2[0];goto X;
    case 12:  gp=&ic12_2[0];goto X;
    case 13:  gp=&ic13_2[0];goto X;
    case 14:  gp=&ic14_2[0];goto X;
    case 15:  gp=&ic15_2[0];goto X;
    case 16:  gp=&ic16_2[0];goto X;
    case 17:  gp=&ic17_2[0];goto X;
    case 18:  gp=&ic18_2[0];goto X;
    case 19:  gp=&ic19_2[0];goto X;
    case 20:  gp=&ic20_2[0];goto X;
    case 21:  gp=&ic21_2[0];goto X;
    case 22:  gp=&ic22_2[0];goto X;
    case 23:  gp=&ic23_2[0];goto X;
    case 24:  gp=&ic24_2[0];goto X;
    case 25:  gp=&ic25_2[0];goto X;
    case 26:  gp=&ic26_2[0];goto X;
    case 27:  gp=&ic27_2[0];goto X;
    case 28:  gp=&ic28_2[0];goto X;
    case 29:  gp=&ic29_2[0];goto X;
    case 30:  gp=&ic30_2[0];goto X;
    case 31:  gp=&ic31_2[0];goto X;
    case 32:  gp=&ic32_2[0];goto X;
    case 33:  gp=&ic33_2[0];goto X;
    case 34:  gp=&ic34_2[0];goto X;
    case 35:  gp=&ic35_2[0];goto X;
    case 36:  gp=&ic36_2[0];goto X;
    case 37:  gp=&ic37_2[0];goto X;
    case 38:  gp=&ic38_2[0];goto X;
    case 39:  gp=&ic39_2[0];goto X;
    case 40:  gp=&ic40_2[0];goto X;
    case 41:  gp=&ic41_2[0];goto X;
    case 42:  gp=&ic42_2[0];goto X;
    case 43:  gp=&ic43_2[0];goto X;
    default: *ngpo=0;return(NULL);
    };
X:  *ngpo =ng_2[*icode];
    return gp;
}


double *SMTMultiIntPoints(int *icode,int *idata,int *ngpo, int *na,int *nb,int *nc,int alloc)
{
  double *a,*b,*c,*gp;
  int i,j,k,in,jn,kn,nn,id,jd,kd,n,m,t,r,e,s;
  if(*icode<1000){
    gp=SMTIntPoints(icode,ngpo);
    *na =*ngpo;
    *nb =0;
    *nc =0;
    if(alloc){
      return gp;
    }else{
      return NULL;
    };    
  }else if(*icode<1000000){
    i= *icode%1000;
    j=(int)*icode/1000;
    a=SMTIntPoints(&i,&in);
    b=SMTIntPoints(&j,&jn);
    nn=in*jn;
    *ngpo=nn;
    *na =in;
    *nb =jn;
    *nc =0;
    if(alloc){    
      gp=(double *)calloc(4*nn,sizeof(double));
      id=nd_2[i];jd=nd_2[j];
      if(id+jd>3){
          printf("\nERROR: integration code %i has more than 3 dimensions\n",*icode);
          idata[ID_ErrorStatus]=ERROR_Fatal;
          return gp;
      };
      for(n=0;n<in;n++){
        for(m=0;m<jn;m++){
          t=4*(n+m*in);
          for(r=0;r<id;r++){
            gp[t]=a[4*n+r];
            t++;
          };
          for(e=0;e<3-id;e++){
            gp[t]=b[4*m+e];
            t++;
          };
          gp[t]=a[4*n+3]*b[4*m+3];
        };
      };
      return gp;
    }else{
      return NULL;
    };    
    
  }else{
    i= *icode%1000;
    j= ((int)(*icode%1000000)/1000);
    k= ((int)(*icode%1000000000)/1000000);
    a=SMTIntPoints(&i,&in);
    b=SMTIntPoints(&j,&jn);
    c=SMTIntPoints(&k,&kn);
    nn=in*jn*kn;
    *ngpo=nn;
    *na =in;
    *nb =jn;
    *nc =kn;
    if(alloc){
      gp=(double *)calloc(4*nn,sizeof(double));
      id=nd_2[i];jd=nd_2[j];kd=nd_2[k];
      if(id+jd+kd>3){
          printf("\nERROR: integration code %i has more than 3 dimensions\n",*icode);
          idata[ID_ErrorStatus]=ERROR_Fatal;
          return gp;
      };
      for(n=0;n<in;n++){
        for(m=0;m<jn;m++){
          for(s=0;s<kn;s++){
            t=4*(n+m*in+s*in*jn);
            for(r=0;r<id;r++){
              gp[t]=a[4*n+r];
              t++;
            };
            for(e=0;e<jd;e++){
              gp[t]=b[4*m+e];
              t++;
            };
            for(e=0;e<3-id-jd;e++){
              gp[t]=c[4*s+e];
              t++;
            };
            gp[t]=a[4*n+3]*b[4*m+3]*c[4*s+3];
          };
        };
      };
      return gp;
    }else{
      return NULL;
    };    
  }
}


      double topL1_2[]={-1.,0.,0.
         ,1.,0.,0.
         };
      double topL2_2[]={-1.,0.,0.
         ,1.,0.,0.
         ,0.,0.,0.
         };
      double topT1_2[]={1.,0.,0.
         ,0.,1.,0.
         ,0.,0.,1.
         };
      double topT2_2[]={1.,0.,0.
         ,0.,1.,0.
         ,0.,0.,1.
         ,0.5,0.5,0.
         ,0.,0.5,0.5
         ,0.5,0.,0.5
         };
      double topQ1_2[]={-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         };
      double topQ2_2[]={-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         ,0.,-1.,0.
         ,1.,0.,0.
         ,0.,1.,0.
         ,-1.,0.,0.
         ,0.,0.,0.
         };
      double topQ2S_2[]={-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         ,0.,-1.,0.
         ,1.,0.,0.
         ,0.,1.,0.
         ,-1.,0.,0.
         };
      double topC1_2[]={-1.,0.,0.
         ,1.,0.,0.
         };
      double topC2_2[]={-1.,0.,0.
         ,1.,0.,0.
         ,0.,0.,0.
         };
      double topP1_2[]={1.,0.,0.
         ,0.,1.,0.
         ,0.,0.,1.
         };
      double topP2_2[]={1.,0.,0.
         ,0.,1.,0.
         ,0.,0.,1.
         ,0.5,0.5,0.
         ,0.,0.5,0.5
         ,0.5,0.,0.5
         };
      double topS1_2[]={-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         };
      double topS2_2[]={-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         ,0.,-1.,0.
         ,1.,0.,0.
         ,0.,1.,0.
         ,-1.,0.,0.
         };
      double topO1_2[]={1.,0.,0.
         ,0.,1.,0.
         ,0.,0.,1.
         ,0.,0.,0.
         };
      double topO2_2[]={1.,0.,0.
         ,0.,1.,0.
         ,0.,0.,1.
         ,0.,0.,0.
         ,0.5,0.5,0.
         ,0.,0.5,0.5
         ,0.5,0.,0.5
         ,0.5,0.,0.
         ,0.,0.5,0.
         ,0.,0.,0.5
         };
      double topH1_2[]={-1.,-1.,-1.
         ,1.,-1.,-1.
         ,1.,1.,-1.
         ,-1.,1.,-1.
         ,-1.,-1.,1.
         ,1.,-1.,1.
         ,1.,1.,1.
         ,-1.,1.,1.
         };
      double topH2_2[]={
		     -1.,-1.,-1.
         ,1.,-1.,-1.
         ,1.,1.,-1.
         ,-1.,1.,-1.
         ,-1.,-1.,1.
         ,1.,-1.,1.
         ,1.,1.,1.
         ,-1.,1.,1.
         ,0.,-1.,-1.
         ,1.,0.,-1.
         ,0.,1.,-1.
         ,-1.,0.,-1.
         ,-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         ,0.,-1.,1.
         ,1.,0.,1.
         ,0.,1.,1.
         ,-1.,0.,1.
		     ,0,0,-1
	      ,0,-1,0
		    ,1,0,0
		    ,0,1,0
		    ,-1,0,0
		    ,0,0,1
		    ,0,0,0
         }; 
	  double topH2S_2[]={-1.,-1.,-1.
         ,1.,-1.,-1.
         ,1.,1.,-1.
         ,-1.,1.,-1.
         ,-1.,-1.,1.
         ,1.,-1.,1.
         ,1.,1.,1.
         ,-1.,1.,1.
         ,0.,-1.,-1.
         ,1.,0.,-1.
         ,0.,1.,-1.
         ,-1.,0.,-1.
         ,-1.,-1.,0.
         ,1.,-1.,0.
         ,1.,1.,0.
         ,-1.,1.,0.
         ,0.,-1.,1.
         ,1.,0.,1.
         ,0.,1.,1.
         ,-1.,0.,1.
         };

const char *Topology_2[18]={"L1","L2","T1","T2","Q1","Q2","C1","C2",
  "P1","P2","S1","S2","O1","O2","H1","H2","Q2S","H2S"};

double *SMTSetReferenceNodes(char *code)
{    
  double *np;
  int i,top;
  top=0;
  for(i=0;i<16;i++){
    if(strcmp(Topology_2[i],code)==0) top=i+1;
  };
  switch (top) {
  case 1:  np=&topL1_2[0];goto X;
  case 2:  np=&topL2_2[0];goto X;
  case 3:  np=&topT1_2[0];goto X;
  case 4:  np=&topT2_2[0];goto X;
  case 5:  np=&topQ1_2[0];goto X;
  case 6:  np=&topQ2_2[0];goto X;
  case 7:  np=&topC1_2[0];goto X;
  case 8:  np=&topC2_2[0];goto X;
  case 9:  np=&topP1_2[0];goto X;
  case 10:  np=&topP2_2[0];goto X;
  case 11:  np=&topS1_2[0];goto X;
  case 12:  np=&topS2_2[0];goto X;
  case 13:  np=&topO1_2[0];goto X;
  case 14:  np=&topO2_2[0];goto X;
  case 15:  np=&topH1_2[0];goto X;
  case 16:  np=&topH2_2[0];goto X;
  case 17:  np=&topQ2S_2[0];goto X;
  case 18:  np=&topH2S_2[0];goto X;
  default:  np=NULL;goto X;
  };
X: return np;
}


double SMSDot(double a[],double b[],int n)
 {double s=0e0;int i;
  for(i=0;i<n;i++)s+=a[i]*b[i];
  return(s);
 }


double SMSSum(double a[],int n)
 {double s=0e0;int i;
  for(i=0;i<n;i++)s+=a[i];
  return(s);
 }

_inline double SMSDeltaPart(double *a,int i,int j,int k)
{div_t d=div(i,j);
  if(d.rem || d.quot>k){return 0e0;}else{return a[d.quot-1];};
}

void SMSMove(double a[],double b[],int n)
{int i;
 for(i=0;i<n;i++)b[i]=a[i];
}

void SMSZero(double a[],int n)
{int i;
 for(i=0;i<n;i++)a[i]=0e0;
}

/*obsolete from version 6.903*/
double SMSIsDOFConstrained(int i,double a,double b)
{
	if(i<0){
		return a;
	}else{
		return b;
	};
}



/*static condensation of unsymmetric matrix */
void SMSCondense(double **s,double *p,double *hb, double *ha,int nb, int ne)
{
    int i,j,k,n,LIMi,LIMj,LIMn;
    double d;

    LIMi=ne;LIMi--;
    LIMj=nb;LIMj--;

    LIMn=nb + ne;LIMn--;
/* invert Shh in the space of Shh*/
    for(n=(nb);n<=LIMn;++n)
    {
        if(s[n][n] != 0)
        {
            d=1.0/s[n][n];
            for(j=nb;j<=LIMn;++j)
            {
                s[n][j]=-s[n][j]*d;
            }
            for(i=nb;i<=LIMn;++i)
            {
                if(n != i)
                {
                    for(j=nb;j<=LIMn;++j)
                    {
                        if(n != j)
                        {
                            s[i][j]=s[i][j]+s[i][n]*s[n][j];
                        }
                    }
                }
                s[i][n]=s[i][n]*d;
            }
            s[n][n]=d;
        }
    }
/* matrices needed for recovery ha = (Shh^-1 Shu),hb=-Shh^-1 pe */
    for(i=nb;i<=LIMn;++i)
    {
        for(j=0;j<=LIMj;++j)
        {
            d=0.0;
            for(k=nb;k<=LIMn;++k)
            {
                d=d+s[i][k]*s[k][j];
            }
            ha[(i-(nb))*nb+j]=d;
        }
    }

    for(i=(nb);i<=LIMn;++i)
    {
        d=0.0;
        for(j=(nb);j<=LIMn;++j)
        {
            d=d+s[i][j]*p[j];
        }
        hb[i-(nb)]=-d;
    }
/* scond*/
    for(i=0;i<=LIMj;++i)
    {
        for(j=0;j<=LIMj;++j)
        {
            d=s[i][j];
            for(k=nb;k<=LIMn;++k)
            {
                d=d-s[i][k]*ha[(k-(nb))*nb+j];
            }
            s[i][j]=d;
        }
    }
/*pcond*/
    for(i=0;i<=LIMj;++i)
    {
        d=p[i];
        for(k=(nb);k<=LIMn;++k)
        {
            d=d+s[i][k]*hb[k-(nb)];
        }
        p[i]=d;
    }

} /* SMSSCondense */

/* 
dh is stored in hb
ha[ne][nb] => ha[i][j]=ha[i*ne+j]
*/
void SMSRecover(double *hb, double *ha, double *du, int nb, int ne)
{
    int i,j,LIMi,LIMj;
    LIMi=ne;LIMi--;
    LIMj=nb;LIMj--;
    for(i=0;i<=LIMi;++i)
    {
        for(j=0;j<=LIMj;++j)
        {
            hb[i]-=ha[i*nb+j]*du[j];
        }
    }
}

/*
*/
double Time()
{  
   struct TIMEB timebuffer;
   char *timeline;
   double current;
   FTIME(&timebuffer );
   timeline = &(ctime( & ( timebuffer.time ) )[11]);
   current=timebuffer.millitm/1000.;
   current=current+(double)timebuffer.time;
   return current;
}

 

void SensDotProduct(ElementSpec *es,ElementData *ed,NodeSpec **ns,NodeData **nd,int *IData,double *KK,double **s,int symm)
{
  int si,sj,ss,n,m,l,si0,siend,ndof;
  int nn,ndof2,nfirst,nnodes;
  int nodeM, dofM,endS,sin;
  double sum,*nK,*nmK,KFi[PD_MAXSensFirstOrder],**DFi;
  ndof=es->id.NoDOFGlobal;ndof2=ndof*ndof;
  si0=IData[ID_SensIndexStart]-1;
  siend=IData[ID_SensIndexEnd]-1;
  nfirst=IData[ID_NoFirstOrderDerivatives];
  nnodes=es->id.NoNodes;
  endS=IData[ID_SensMaxGroupLength];
  DFi=&s[endS];
  for(si=0;si<nfirst;si++){
    n=0;
    for(nodeM=0;nodeM<nnodes;nodeM++){
      nn=ns[nodeM]->id.NoDOF;sin=si*nn;
      for(dofM=0;dofM<nn;dofM++){
        DFi[si][n++]=nd[nodeM]->st[sin+dofM];
      };
    };
  };
if(symm){
  for(n=0;n<ndof;n++){
    nK=&KK[n*ndof2];
    for(m=n;m<ndof;m++){
      nmK=&nK[m*ndof];
      for(si=0;si<nfirst;si++){
        sum=0;
        for(l=0;l<ndof;l++)sum+=nmK[l]*DFi[si][l];
		    KFi[si]=sum;
      };
      for(ss=si0;ss<=siend;ss++){
        si=es->SensLowerOrderIndex[6*ss]-1;
        sj=es->SensLowerOrderIndex[6*ss+1]-1;
        s[ss-si0][n]+=KFi[sj]*DFi[si][m];
        if(n!=m) s[ss-si0][m]+=KFi[sj]*DFi[si][n];
      }
    }
  }; 
 }else{
  for(n=0;n<ndof;n++){
    nK=&KK[n*ndof2];
    for(m=0;m<ndof;m++){
      nmK=&nK[m*ndof];
      for(si=0;si<nfirst;si++){
        sum=0;
        for(l=0;l<ndof;l++)sum+=nmK[l]*DFi[si][l];
		    KFi[si]=sum;
      };
      for(ss=si0;ss<=siend;ss++){
        si=es->SensLowerOrderIndex[6*ss]-1;
        sj=es->SensLowerOrderIndex[6*ss+1]-1;
        s[ss-si0][n]+=KFi[sj]*DFi[si][m];
      }
    }
  };  
 }
  
}
